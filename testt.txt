import SwiftUI
import Playbook

// MARK: - UI Components

// ðŸ“Œ Custom Button
struct CustomButton: View {
    let title: String
    let backgroundColor: Color
    let isDisabled: Bool
    
    var body: some View {
        Button(action: {}) {
            Text(title)
                .padding()
                .frame(maxWidth: .infinity)
                .background(backgroundColor)
                .foregroundColor(.white)
                .cornerRadius(10)
        }
        .disabled(isDisabled)
        .padding()
    }
}

// ðŸ“Œ Text Field
struct CustomTextField: View {
    @State private var text: String = ""
    let placeholder: String
    
    var body: some View {
        TextField(placeholder, text: $text)
            .textFieldStyle(RoundedBorderTextFieldStyle())
            .padding()
    }
}

// ðŸ“Œ Toggle Switch
struct CustomToggle: View {
    @State private var isOn = false
    
    var body: some View {
        Toggle("Enable Feature", isOn: $isOn)
            .padding()
    }
}

// ðŸ“Œ Progress Bar
struct CustomProgressBar: View {
    @State private var progress: Float = 0.5
    
    var body: some View {
        ProgressView(value: progress, total: 1.0)
            .progressViewStyle(LinearProgressViewStyle())
            .padding()
    }
}

// ðŸ“Œ Alert Modal
struct CustomAlertView: View {
    @State private var showAlert = false
    
    var body: some View {
        VStack {
            Button("Show Alert") {
                showAlert = true
            }
            .alert(isPresented: $showAlert) {
                Alert(title: Text("Warning"), message: Text("This is an alert message"), dismissButton: .default(Text("OK")))
            }
        }
    }
}

// MARK: - Playbook Scenarios
let playbook = Playbook {
    
    // ðŸ”¹ Button Variations
    Scenario("Primary Button", layout: .fill) {
        CustomButton(title: "Click Me", backgroundColor: .blue, isDisabled: false)
    }
    Scenario("Disabled Button", layout: .fill) {
        CustomButton(title: "Disabled", backgroundColor: .gray, isDisabled: true)
    }
    
    // ðŸ”¹ Text Field Variations
    Scenario("Text Field - Default", layout: .fill) {
        CustomTextField(placeholder: "Enter text")
    }
    
    // ðŸ”¹ Switch & Progress Bar
    Scenario("Toggle Switch", layout: .fill) {
        CustomToggle()
    }
    
    Scenario("Progress Bar", layout: .fill) {
        CustomProgressBar()
    }
    
    // ðŸ”¹ Alert Modal
    Scenario("Alert", layout: .fill) {
        CustomAlertView()
    }
}
